{"version":3,"file":"webstorage.service.js","sourceRoot":"","sources":["../../src/service/webstorage.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,sCAAyC;AACzC,oEAAgE;AAYhE;IAGI,2BAAsB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;IAEtC,CAAC;IAED,+BAAG,GAAH,UAAI,GAAW;QACX,MAAM,CAAC,sCAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACpD,CAAC;IAED,+BAAG,GAAH,UAAI,GAAW,EAAE,KAAU;QACvB,sCAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,kCAAM,GAAN,UAAO,GAAW;QACd,sCAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC;IAED,iCAAK,GAAL;QACI,GAAG,CAAC,CAAY,UAAmD,EAAnD,KAA6B,IAAI,CAAC,WAAY,CAAC,IAAI,EAAnD,cAAmD,EAAnD,IAAmD;YAA9D,IAAI,GAAG,SAAA;YACR,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SAChC;IACL,CAAC;IACL,wBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBqB,8CAAiB;AA2BvC,IAAa,mBAAmB;IAAS,uCAAiB;IAGtD;eACI,kBAAM,YAAY,CAAC;IACvB,CAAC;IACL,0BAAC;AAAD,CAAC,AAND,CAAyC,iBAAiB,GAMzD;AALiB,wBAAI,GAAkB,EAAE,CAAC;AAD9B,mBAAmB;IAD/B,iBAAU,EAAE;;GACA,mBAAmB,CAM/B;AANY,kDAAmB;AAShC,IAAa,qBAAqB;IAAS,yCAAiB;IAGxD;eACI,kBAAM,cAAc,CAAC;IACzB,CAAC;IACL,4BAAC;AAAD,CAAC,AAND,CAA2C,iBAAiB,GAM3D;AALiB,0BAAI,GAAkB,EAAE,CAAC;AAD9B,qBAAqB;IADjC,iBAAU,EAAE;;GACA,qBAAqB,CAMjC;AANY,sDAAqB","sourcesContent":["import {Injectable} from '@angular/core';\nimport {WebStorageUtility} from '../utility/webstorage.utility';\n\nexport interface WebStorageServiceInterface {\n    keys: Array<string>;\n    new(): {\n        get(key: string): any;\n        set(key: string, value: any): void;\n        remove(key: string): void;\n        clear(): void;\n    }\n}\n\nexport abstract class WebStorageService {\n    public static keys: Array<string>;\n\n    constructor(protected storage: Storage) {\n\n    }\n\n    get(key: string): any {\n        return WebStorageUtility.get(this.storage, key);\n    }\n\n    set(key: string, value: any): void {\n        WebStorageUtility.set(this.storage, key, value);\n    }\n\n    remove(key: string): void {\n        WebStorageUtility.remove(this.storage, key);\n    }\n\n    clear(): void {\n        for (let key of (<WebStorageServiceInterface>this.constructor).keys) {\n            this.storage.removeItem(key);\n        }\n    }\n}\n\n@Injectable()\nexport class LocalStorageService extends WebStorageService {\n    public static keys: Array<string> = [];\n\n    constructor() {\n        super(localStorage);\n    }\n}\n\n@Injectable()\nexport class SessionStorageService extends WebStorageService {\n    public static keys: Array<string> = [];\n\n    constructor() {\n        super(sessionStorage);\n    }\n}\n"]}