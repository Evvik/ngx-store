{"version":3,"file":"webstorage.js","sourceRoot":"","sources":["../../src/decorator/webstorage.ts"],"names":[],"mappings":";;AAAA,oEAAgE;AAChE,oEAAqH;AAGrH,sBAA6B,GAAY;IACrC,MAAM,CAAC,kBAAU,CAAC,YAAY,EAAE,wCAAmB,EAAE,GAAG,CAAC,CAAC;AAC9D,CAAC;AAFD,oCAEC;AAED,wBAA+B,GAAY;IACvC,MAAM,CAAC,kBAAU,CAAC,cAAc,EAAE,0CAAqB,EAAE,GAAG,CAAC,CAAC;AAClE,CAAC;AAFD,wCAEC;AAED,uBAAuB;AACvB,IAAI,KAAK,GAAG,EAAE,CAAC;AAEJ,QAAA,UAAU,GAAG,UAAC,UAAmB,EAAE,OAAmC,EAAE,GAAW;IAC1F,MAAM,CAAC,UAAC,MAAc,EAAE,YAAoB;QACxC,GAAG,GAAG,GAAG,IAAI,YAAY,CAAC;QAC1B,IAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;QACjC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEvB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,EAAE;YACxC,GAAG,EAAE;gBACD,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YACD,GAAG,EAAE,UAAS,KAAU;gBACpB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACd,KAAK,GAAG,sCAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC;oBACxD,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAK,GAAG,KAAK,CAAC;oBACd,sCAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;gBAClD,CAAC;gBAED,+BAA+B;gBAC/B,EAAE,CAAC,CAAC,KAAK,YAAY,MAAM,CAAC,CAAC,CAAC;oBAC1B,KAAK,CAAC,IAAI,GAAG;wBACT,sCAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBAClD,CAAC,CAAC;gBACN,CAAC;gBAED,yCAAyC;gBACzC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAM,kBAAkB,GAAG;wBACvB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ;wBAC9D,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY;qBAC3D,CAAC;4CACO,MAAM;wBACX,KAAK,CAAC,MAAM,CAAC,GAAG,UAAS,KAAK;4BAC1B,IAAI,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;4BAC7D,sCAAiB,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;4BAC9C,MAAM,CAAC,MAAM,CAAC;wBAClB,CAAC,CAAA;oBACL,CAAC;oBAND,GAAG,CAAC,CAAe,UAAkB,EAAlB,yCAAkB,EAAlB,gCAAkB,EAAlB,IAAkB;wBAAhC,IAAI,MAAM,2BAAA;gCAAN,MAAM;qBAMd;gBACL,CAAC;YACL,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAA;AACL,CAAC,CAAC","sourcesContent":["import {WebStorageUtility} from '../utility/webstorage.utility';\nimport {LocalStorageService, SessionStorageService, WebStorageServiceInterface} from '../service/webstorage.service';\n\n\nexport function LocalStorage(key?: string) {\n    return WebStorage(localStorage, LocalStorageService, key);\n}\n\nexport function SessionStorage(key?: string) {\n    return WebStorage(sessionStorage, SessionStorageService, key);\n}\n\n// initialization cache\nlet cache = {};\n\nexport let WebStorage = (webStorage: Storage, service: WebStorageServiceInterface, key: string) => {\n    return (target: Object, propertyName: string): void => {\n        key = key || propertyName;\n        let proxy = target[propertyName];\n        service.keys.push(key);\n\n        Object.defineProperty(target, propertyName, {\n            get: function() {\n                return proxy;\n            },\n            set: function(value: any) {\n                if (!cache[key]) { // first setter handle\n                    proxy = WebStorageUtility.get(webStorage, key) || value;\n                    cache[key] = true;\n                } else { // if there is no value in localStorage, set it to initializer\n                    proxy = value;\n                    WebStorageUtility.set(webStorage, key, value);\n                }\n\n                // manual method for force save\n                if (proxy instanceof Object) {\n                    proxy.save = function () {\n                        WebStorageUtility.set(webStorage, key, proxy);\n                    };\n                }\n\n                // handle methods changing value of array\n                if (Array.isArray(proxy)) {\n                    const methodsToOverwrite = [\n                        'join', 'pop', 'push', 'reverse', 'shift', 'unshift', 'splice',\n                        'filter', 'forEach', 'map', 'fill', 'sort', 'copyWithin'\n                    ];\n                    for (let method of methodsToOverwrite) {\n                        proxy[method] = function(value) {\n                            let result = Array.prototype[method].apply(proxy, arguments);\n                            WebStorageUtility.set(webStorage, key, proxy);\n                            return result;\n                        }\n                    }\n                }\n            },\n        });\n    }\n};\n"]}